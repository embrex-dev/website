---
import { useTranslations } from '../i18n/ui';

const lang = Astro.currentLocale || 'en';
const t = useTranslations(lang);
---

<section id="code-example" class="py-20 lg:py-32 bg-gray-50 dark:bg-gray-800">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <div class="inline-flex items-center px-4 py-2 mb-4 text-sm font-medium text-flame-600 bg-flame-100 rounded-full dark:bg-flame-900 dark:text-flame-300">
        <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M12.316 3.051a1 1 0 01.633 1.265l-4 12a1 1 0 11-1.898-.632l4-12a1 1 0 011.265-.633zM5.707 6.293a1 1 0 010 1.414L3.414 10l2.293 2.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0zm8.586 0a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 11-1.414-1.414L16.586 10l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
        {t('codeExample.badge')}
      </div>
      <h2 class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4">
        {t('codeExample.title')} <span class="text-transparent bg-clip-text bg-gradient-to-r from-ember-600 to-flame-600">{t('codeExample.titleHighlight')}</span>
      </h2>
      <p class="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
        {t('codeExample.subtitle')}
      </p>
    </div>

    <!-- Code Comparison -->
    <div class="grid lg:grid-cols-2 gap-8">
      <!-- Before -->
      <div class="relative">
        <div class="absolute -top-4 left-4 px-4 py-2 bg-red-600 text-white font-semibold rounded-lg shadow-lg z-10">
          ❌ {t('codeExample.without')}
        </div>
        <div class="bg-gray-900 rounded-2xl p-6 pt-12 h-full">
          <div class="overflow-y-auto custom-scrollbar">
            <pre class="text-gray-300 text-sm leading-relaxed"><code>{`// src/Entity/Product.php
<?php

namespace App\\Entity;

use App\\Repository\\ProductRepository;
use Doctrine\\ORM\\Mapping as ORM;
use Symfony\\Component\\Validator\\Constraints as Assert;
use DOctrine\\DBAL\\Types\\Types;

#[ORM\\Entity(repositoryClass: ProductRepository::class)]
#[ORM\\Table(name: 'products')]
class Product
{
    #[ORM\\Id]
    #[ORM\\GeneratedValue]
    #[ORM\\Column]
    private ?int $id = null;

    #[ORM\\Column(length: 255, type: Types::TEXT)]
    #[Assert\\NotBlank]
    #[Assert\\Length(min: 3, max: 255)]
    private ?string $name = null;

    #[ORM\\Column(type: Types::INTEGER]
    #[Assert\\NotNull]
    #[Assert\\PositiveOrZero]
    private ?int $price = null;

    public function getId(): ?int
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(string $name): static
    {
        $this->name = $name;
        return $this;
    }

    // ... more getters and setters ...
}

// src/Repository/ProductRepository.php
// src/Form/ProductType.php
// src/Controller/ProductController.php
// ... and many more files to write manually ...`}</code></pre>
          </div>
        </div>
      </div>

      <!-- After -->
      <div class="relative">
        <div class="absolute -top-4 left-4 px-4 py-2 bg-green-600 text-white font-semibold rounded-lg shadow-lg z-10">
          ✅ {t('codeExample.with')}
        </div>
        <div class="bg-gray-900 rounded-2xl p-6 pt-12 h-full">
          <div class="space-y-6">
            <div>
              <div class="text-gray-500 text-sm mb-2"># schema.yaml</div>
              <pre class="text-green-400 text-sm leading-relaxed"><code>{`entities:
  Product:
    properties:
      sku: string(50)
      name: string(255)
      price: decimal(10,2)
      stock: integer
      isActive: boolean
    relations:
      category: manyToOne(Category)

forms:
  ProductType:
    entity: Product
    fields:
      sku: text
      name: text
      price: money
      category: entity

controllers:
  ProductController:
    actions:
      index: /products
      show: /products/{id}

validation:
  Product:
    properties:
      name:
        - NotBlank
        - Length: { min: 3, max: 255 }
      price:
        - NotNull
        - PositiveOrZero`}</code></pre>
            </div>

            <div class="border-t border-gray-700 pt-6">
              <div class="text-gray-500 text-sm mb-3">$ {t('codeExample.runCommand')}:</div>
              <div class="bg-black rounded-lg p-4">
                <code class="text-green-400">php bin/console embrex:build</code>
              </div>
            </div>

            <div class="border-t border-gray-700 pt-6">
              <div class="text-gray-500 text-sm mb-3">✨ {t('codeExample.generated')}:</div>
              <div class="space-y-2 text-sm">
                <div class="flex items-center text-gray-300">
                  <svg class="w-4 h-4 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  {t('codeExample.generated1')}
                </div>
                <div class="flex items-center text-gray-300">
                  <svg class="w-4 h-4 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  {t('codeExample.generated2')}
                </div>
                <div class="flex items-center text-gray-300">
                  <svg class="w-4 h-4 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  {t('codeExample.generated3')}
                </div>
                <div class="flex items-center text-gray-300">
                  <svg class="w-4 h-4 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  {t('codeExample.generated4')}
                </div>
                <div class="flex items-center text-gray-300">
                  <svg class="w-4 h-4 mr-2 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  {t('codeExample.generated5')}
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Time Saved -->
    <div class="mt-12 bg-gradient-to-r from-ember-600 to-flame-600 rounded-2xl p-8 text-white text-center">
      <div class="max-w-4xl mx-auto">
        <h3 class="text-2xl md:text-3xl font-bold mb-4">
          {t('codeExample.timeSaved')} <span class="text-white font-extrabold">{t('codeExample.timeSavedAmount')}</span> {t('codeExample.timeSavedSuffix')}
        </h3>
        <p class="text-lg opacity-90 mb-6">
          {t('codeExample.imagineText')}
        </p>
        <div class="grid grid-cols-3 gap-8 max-w-2xl mx-auto">
          <div>
            <div class="text-3xl md:text-4xl font-bold text-white">10+</div>
            <div class="text-sm opacity-75">{t('codeExample.stat1Label')}</div>
          </div>
          <div>
            <div class="text-3xl md:text-4xl font-bold text-white">100%</div>
            <div class="text-sm opacity-75">{t('codeExample.stat2Label')}</div>
          </div>
          <div>
            <div class="text-3xl md:text-4xl font-bold text-white">0</div>
            <div class="text-sm opacity-75">{t('codeExample.stat3Label')}</div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <style>
    .custom-scrollbar::-webkit-scrollbar {
      width: 6px;
    }

    .custom-scrollbar::-webkit-scrollbar-track {
      background: rgba(0, 0, 0, 0.1);
      border-radius: 3px;
    }

    .custom-scrollbar::-webkit-scrollbar-thumb {
      background: rgba(255, 255, 255, 0.2);
      border-radius: 3px;
    }

    .custom-scrollbar::-webkit-scrollbar-thumb:hover {
      background: rgba(255, 255, 255, 0.3);
    }
  </style>
</section>
