---
import { languages } from '../i18n/ui';

const currentLocale = Astro.currentLocale || 'en';
const currentPath = Astro.url.pathname;

// Remove locale prefix from path
const pathWithoutLocale = currentPath.replace(/^\/(en|fr)/, '') || '/';

function getLocalizedPath(locale: string) {
  if (locale === 'en') {
    return pathWithoutLocale;
  }
  return `/${locale}${pathWithoutLocale}`;
}
---

<div class="relative inline-block text-left">
  <button
    type="button"
    class="inline-flex items-center justify-center px-3 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-ember-500 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-700"
    id="language-menu-button"
    aria-expanded="false"
    aria-haspopup="true"
  >
    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"></path>
    </svg>
    {languages[currentLocale as keyof typeof languages]}
    <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>
  </button>

  <div
    class="hidden absolute right-0 z-10 mt-2 w-40 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none dark:bg-gray-800 dark:ring-gray-700"
    id="language-menu"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="language-menu-button"
    tabindex="-1"
  >
    <div class="py-1" role="none">
      {Object.entries(languages).map(([locale, label]) => (
        <a
          href={getLocalizedPath(locale)}
          class={`block px-4 py-2 text-sm ${
            currentLocale === locale
              ? 'bg-gray-100 text-gray-900 dark:bg-gray-700 dark:text-white'
              : 'text-gray-700 hover:bg-gray-50 dark:text-gray-300 dark:hover:bg-gray-700'
          }`}
          role="menuitem"
          tabindex="-1"
        >
          {label}
        </a>
      ))}
    </div>
  </div>
</div>

<script>
  const button = document.getElementById('language-menu-button');
  const menu = document.getElementById('language-menu');
  
  button?.addEventListener('click', () => {
    menu?.classList.toggle('hidden');
  });
  
  // Close menu when clicking outside
  document.addEventListener('click', (e) => {
    if (!button?.contains(e.target as Node) && !menu?.contains(e.target as Node)) {
      menu?.classList.add('hidden');
    }
  });
</script>